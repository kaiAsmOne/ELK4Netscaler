input {
  tcp {
    host => "192.168.242.245"
    port => 5000
    type => syslog
  }
  udp {
    host => "192.168.242.245"
    port => 5000
    type => syslog
  }
}


# Filter for CEF

filter {
 # Filter only CEF logs here
 if [host] == "192.168.242.250" {
    # Manipulate the message
    mutate {
         # Saved the original message into a temporary field
         add_field => { "tmp_message" => "%{message}" }
         # splits message on the "|"  and has index numbers
         split => ["message", "|"]
         # generate fields for the CEF header
         add_field => { "cef_version" => "%{message[0]}" }
         add_field => { "cef_device_vendor" => "%{message[1]}" }
         add_field => { "cef_device_product" => "%{message[2]}" }
         add_field => { "cef_device_version" => "%{message[3]}" }
         add_field => { "cef_signature_id" => "%{message[4]}" }
         add_field => { "cef_signature_name" => "%{message[5]}" }
         add_field => { "cef_signature_severity" => "%{message[6]}" }
    }
    # Parse the message with field=value formats
    kv {
        # Note: values with spaces are lost (still getting there)
         field_split => " "
         trim_key => "<>\[\], "
         trim_value => "<>\[\],"
         # Only included the fields which are of interest (dont need everything)
         include_keys => ["src","spt","method","request","msg","cn1","cn2","cs1","cs2","cs3","cs4","cs5","act"]
    }
    mutate {
        # Rename fields to cef_field_names
        rename => [ "src",    "cef_traffic_SourceAddress"]
        rename => [ "spt",    "cef_traffic_sourcePort"]
        rename => [ "method",    "cef_traffic_requestMethod"]
        rename => [ "request",    "cef_traffic_requestURL"]
        rename => [ "msg",  "cef_traffic_message"]
        rename => [ "cn1",    "cef_traffic_deviceCustom_Number1"]
        rename => [ "cn2",    "cef_traffic_deviceCustom_Number2"]
        rename => [ "cs1",    "cef_traffic_deviceCustom_String1"]
        rename => [ "cs2",    "cef_traffic_deviceCustom_String2"]
        rename => [ "cs3",    "cef_traffic_deviceCustom_String3"]
        rename => [ "cs4",    "cef_traffic_deviceCustom_String4"]
        rename => [ "cs5",    "cef_traffic_deviceCustom_String5"]
        rename => [ "act",    "cef_traffic_deviceAction"]
        # Revert original message and remove temporary field
        replace => { "message" => "%{tmp_message}" }
        remove_field => [ "tmp_message" ]
    }
  }
}



output {
elasticsearch { hosts => ["192.168.242.245:9200"] }
stdout { codec => rubydebug }
}



